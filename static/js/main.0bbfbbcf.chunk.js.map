{"version":3,"sources":["components/ZoneCard.js","components/Credits.js","components/Provinces.js","components/CountryMap.js","App.js","serviceWorker.js","index.js"],"names":["ZoneCard","props","zone","react_default","a","createElement","className","src","armories","alt","name","fr","width","style","maxWidth","maxHeight","nl","chiefTown","Credits","href","provinces","id","Leaflet","Icon","Default","imagePath","regions","CountryMap","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","lat","lng","zoom","onEachFeature","bind","assertThisInitialized","clickToFeature","resetHighlight","loadData","getStyle","feature","selected","selectedFeature","fillColor","weight","opacity","color","dashArray","fillOpacity","newProps","toLoad","type","_this2","selectedZoneSlug","slugify","lower","fetch","then","res","json","geojson","undefined","features","forEach","properties","nom","names","VARNAME_1","split","concat","find","ou","some","slugOuFr","slugOuNl","slugName","slug","setState","layer","on","mouseover","highlightFeature","mouseout","click","e","target","history","push","evt","position","Map","center","height","TileLayer","url","attribution","GeoJSON","key","data","components_ZoneCard","components_Credits","React","Component","withRouter","App","HashRouter","Switch","Route","path","render","components_CountryMap","assign","match","params","Redirect","to","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0bbfbbcf.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ZoneCard = props => {\n  const { zone } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"container\">\n        <img\n          src={zone.armories}\n          alt={\"armories of \" + zone.name.fr}\n          width=\"100%\"\n          style={{ maxWidth: \"200px\", maxHeight: \"200px\" }}\n        />\n        <h4>\n          <b>{zone.name.fr}</b> <br /> <b>{zone.name.nl}</b>\n        </h4>\n        {zone.chiefTown && <p>Chef lieu : {zone.chiefTown.fr}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default ZoneCard;\n","import React from \"react\";\n\nconst Credits = () => (\n  <div>\n    Armoiries from &nbsp;\n    <a href=\"https://fr.wikipedia.org/wiki/Provinces_de_Belgique\">Wikipedia</a>\n    <li>\n      Tom-L [CC BY-SA 3.0 (https://creativecommons.org/licenses/by-sa/3.0)], via\n      Wikimedia Commons\n    </li>\n  </div>\n);\n\nexport default Credits;\n","const provinces = [\n  {\n    id: 1,\n    name: { fr: \"Bruxelles capitale\", nl: \"Brussel Hoofstadt\" },\n    chiefTown: { fr: \"Bruxelles\", nl: \"Brussel\" },\n    armories:\n      \"https://upload.wikimedia.org/wikipedia/commons/7/7a/Blason_de_Bruxelles-Capitale.svg\"\n  },\n  {\n    id: 2,\n    name: { fr: \"Anvers\", nl: \"Antwerpen\" },\n    chiefTown: { nl: \"Antwerpen\", fr: \"Anvers\" },\n    armories:\n      \"https://upload.wikimedia.org/wikipedia/commons/0/09/Wapen_van_de_provincie_Antwerpen.svg\"\n  },\n  {\n    id: 4,\n    name: { fr: \"Flandre Orientale\", nl: \"Oost-Vlaanderen\" },\n    chiefTown: { nl: \"Gent\", fr: \"Gand\" },\n    armories:\n      \"https://upload.wikimedia.org/wikipedia/commons/5/51/Wapen_van_Oost-Vlaanderen.svg\"\n  },\n  {\n    id: 3,\n    name: { fr: \"Limbourg\", nl: \"Limburg\" },\n    chiefTown: { fr: \"Hasselt\", nl: \"Hasselt\" },\n    armories:\n      \"https://upload.wikimedia.org/wikipedia/commons/c/cc/Wapen_van_Limburg_%28Belgi%C3%AB%29.svg\"\n  },\n  {\n    id: 6,\n    name: { fr: \"Flandre Occidentale\", nl: \"West-Vlaanderen\" },\n    chiefTown: { fr: \"Bruges\", nl: \"Brugge\" },\n    armories:\n      \"https://upload.wikimedia.org/wikipedia/commons/a/a3/Wapen_van_West-Vlaanderen.svg\"\n  },\n  {\n    id: 7,\n    name: { fr: \"Brabant Wallon\", nl: \"Waals-Brabant\" },\n    chiefTown: { fr: \"Wavre\", nl: \"Waver\" },\n    armories:\n      \"https://upload.wikimedia.org/wikipedia/commons/1/1c/Wapen_van_Waals-Brabant.svg\"\n  },\n  {\n    id: 8,\n    name: { fr: \"Hainaut\", nl: \"Henegouwen\" },\n    chiefTown: { fr: \"Mons\", nl: \"Bergen\" },\n    armories:\n      \"https://upload.wikimedia.org/wikipedia/commons/c/c9/H%C3%A9raldique_Province_BE_Hainaut_crown.svg\"\n  },\n  {\n    id: 9,\n    name: { fr: \"Liège\", nl: \"Luik\" },\n    chiefTown: { fr: \"Liège\", nl: \"Luik\" },\n    armories:\n      \"https://upload.wikimedia.org/wikipedia/commons/e/e5/Blason_liege_prov_crown.svg\"\n  },\n  {\n    id: 12,\n    name: { fr: \"Namur\", nl: \"Namen\" },\n    chiefTown: { fr: \"Namur\", nl: \"Namen\" },\n    armories:\n      \"https://upload.wikimedia.org/wikipedia/commons/2/2e/Blason_namur_prov_crown.svg\"\n  },\n  {\n    id: 11,\n    name: { fr: \"Luxembourg\", nl: \"Luxemburg\" },\n    chiefTown: { fr: \"Arlon\", nl: \"Aarlen\" },\n    armories:\n      \"https://upload.wikimedia.org/wikipedia/commons/e/ed/Coat_of_arms_of_the_Province_of_Luxembourg.svg\"\n  },\n  {\n    id: 5,\n    name: { fr: \"Brabant Flamand\", nl: \"Vlaams-Brabant\" },\n    chiefTown: { nl: \"Leuven\", fr: \"Louvain\" },\n    armories:\n      \"https://upload.wikimedia.org/wikipedia/commons/c/ca/Wapen_van_Vlaams-Brabant.svg\"\n  }\n];\n\nexport default provinces;\n","import React from \"react\";\nimport { Map, TileLayer, GeoJSON } from \"react-leaflet\";\nimport Leaflet from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nimport ZoneCard from \"./ZoneCard\";\nimport Credits from \"./Credits\";\nimport provinces from \"./Provinces\";\n\nimport { withRouter } from \"react-router-dom\";\nimport slugify from \"slugify\";\n\nLeaflet.Icon.Default.imagePath =\n  \"//cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.4/images/\";\n\nconst regions = [\n  {\n    name: { fr: \"Région Wallonne\", nl: \"Waalse Gewest\" },\n    armories:\n      \"https://upload.wikimedia.org/wikipedia/commons/4/42/Flag_of_Wallonia.svg\"\n  },\n  {\n    name: { fr: \"Région Flamande\", nl: \"Vlaams Gewest\" },\n    armories:\n      \"https://upload.wikimedia.org/wikipedia/commons/2/2b/Flag_of_Flanders.svg\"\n  },\n  {\n    name: {\n      fr: \"Région Bruxelles-Capitale\",\n      nl: \"Brussels Hoofdstedelijk Gewest\"\n    },\n    armories:\n      \"https://upload.wikimedia.org/wikipedia/commons/b/bc/Flag_of_the_Brussels-Capital_Region.svg\"\n  }\n];\n\nclass CountryMap extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      lat: 50.5039,\n      lng: 4.4699,\n      zoom: 8\n    };\n    this.onEachFeature = this.onEachFeature.bind(this);\n    this.clickToFeature = this.clickToFeature.bind(this);\n    this.resetHighlight = this.resetHighlight.bind(this);\n    this.loadData = this.loadData.bind(this);\n    this.getStyle = this.getStyle.bind(this);\n  }\n\n  getStyle(feature) {\n    const selected = this.state && this.state.selectedFeature === feature;\n    return {\n      fillColor: selected ? \"red\" : \"#ece7f2\",\n      weight: 2,\n      opacity: 1,\n      color: selected ? \"red\" : \"blue\",\n      dashArray: \"3\",\n      fillOpacity: 0.7\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    const toLoad = newProps.type !== this.props.type;\n    this.props = newProps;\n    if (toLoad) {\n      this.loadData();\n    }\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    const selectedZoneSlug = slugify(this.props.zone, { lower: true });\n    const type = this.props.type;\n\n    fetch(\"./\" + type + \".geo.json\")\n      .then(res => res.json())\n      .then(geojson => {\n        let selectedFeature = undefined;\n        geojson.features.forEach(feature => {\n          if (feature.properties === undefined) {\n            feature.properties = { name: { fr: feature.nom, nl: feature.nom } };\n          }\n          const names = feature.properties.VARNAME_1\n            ? feature.properties.VARNAME_1.split(\"|\")\n            : [feature.properties.nom];\n          const zones = provinces.concat(regions);\n          const zone = zones.find(ou => {\n            return names.some(name => {\n              const slugOuFr = slugify(ou.name.fr, {\n                lower: true\n              });\n              const slugOuNl = slugify(ou.name.nl, {\n                lower: true\n              });\n              const slugName = slugify(name, {\n                lower: true\n              });\n\n              return (\n                ou.name.fr === name ||\n                ou.name.nl === name ||\n                slugOuFr === slugName ||\n                slugOuNl === slugName\n              );\n            });\n          });\n          if (zone) {\n            feature.properties.zone = zone;\n            feature.properties.slug = slugify(zone.name.fr, {\n              lower: true\n            });\n          } else {\n            feature.properties.slug = slugify(names[0], {\n              lower: true\n            });\n          }\n\n          if (feature.properties.slug === selectedZoneSlug) {\n            selectedFeature = feature;\n          }\n        });\n\n        if (selectedFeature === undefined) {\n          selectedFeature = geojson.features[0];\n        }\n        this.setState({ geojson, selectedFeature });\n      });\n  }\n\n  onEachFeature(feature, layer) {\n    layer.on({\n      mouseover: this.highlightFeature,\n      mouseout: this.resetHighlight,\n      click: this.clickToFeature\n    });\n  }\n\n  clickToFeature(e) {\n    const layer = e.target;\n    const feature = layer.feature;\n\n    this.props.history.push(\n      \"/belgium/\" + this.props.type + \"/\" + feature.properties.slug\n    );\n\n    this.setState({\n      selectedFeature: feature\n    });\n  }\n\n  highlightFeature(evt) {}\n  resetHighlight(evt) {}\n  render() {\n    const position = [this.state.lat, this.state.lng];\n\n    return (\n      <div>\n        <Map\n          center={position}\n          zoom={this.state.zoom}\n          style={{ width: \"100%\", height: \"600px\" }}\n        >\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          />\n\n          {this.state.geojson && (\n            <GeoJSON\n              key={this.props.type}\n              data={this.state.geojson}\n              style={this.getStyle}\n              onEachFeature={this.onEachFeature}\n            />\n          )}\n        </Map>\n        {this.state.selectedFeature &&\n          this.state.selectedFeature.properties.zone && (\n            <ZoneCard zone={this.state.selectedFeature.properties.zone} />\n          )}\n        <Credits />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CountryMap);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CountryMap from \"./components/CountryMap\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route\n              path=\"/belgium/:type/:zone\"\n              render={props => {\n                return (\n                  <CountryMap\n                    {...props}\n                    type={props.match.params.type}\n                    zone={props.match.params.zone}\n                  />\n                );\n              }}\n            />\n\n            <Route render={() => <Redirect to=\"/belgium/regions\" />} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}